diff --git a/src/GNUmakefile b/src/GNUmakefile
index b74b3a3..468c000 100644
--- a/src/GNUmakefile
+++ b/src/GNUmakefile
@@ -63,8 +63,13 @@ endef
 
 $(eval $(call define_from_arch.h,,HAS_LOADER_32BIT))
 
+ifdef X86_32BIT
+  HAS_LOADER_32BIT =
+  LOADER_FLAGS_X86_32 = -m32
+endif
 ifdef HAS_LOADER_32BIT
   OBJECTS += loader/loader-m32-wrapped.o
+  LOADER_FLAGS_X86_32 =
 endif
 
 .DEFAULT_GOAL = proot
@@ -163,8 +168,8 @@ LOADER$1_OBJECTS = loader/loader$1.o loader/assembly$1.o
 $(eval $(call define_from_arch.h,$1,LOADER_ARCH_CFLAGS))
 $(eval $(call define_from_arch.h,$1,LOADER_ADDRESS))
 
-LOADER_CFLAGS$1  += -fPIC -ffreestanding $(LOADER_ARCH_CFLAGS$1)
-LOADER_LDFLAGS$1 += -static -nostdlib -Wl$(BUILD_ID_NONE),-Ttext=$(LOADER_ADDRESS$1),-z,noexecstack
+LOADER_CFLAGS$1  += $(LOADER_FLAGS_X86_32) -fPIC -ffreestanding $(LOADER_ARCH_CFLAGS$1)
+LOADER_LDFLAGS$1 += $(LOADER_FLAGS_X86_32) -static -nostdlib -Wl$(BUILD_ID_NONE),-Ttext=$(LOADER_ADDRESS$1),-z,noexecstack
 
 loader/loader$1.o: loader/loader.c
 	@mkdir -p $$(dir $$@)
diff --git a/src/arch.h b/src/arch.h
index b219cd6..8a65aca 100644
--- a/src/arch.h
+++ b/src/arch.h
@@ -138,6 +138,26 @@ typedef unsigned char byte_t;
     #undef SYSCALL_AVOIDER
     #define SYSCALL_AVOIDER ((word_t) -1)
 
+    /* Fix a compile error of proot when using aarch64-linux-gnu-gcc. */
+    /* These define come from glibc/sysdeps/unix/sysv/linux/aarch64/sys/user.h */
+    /* See https://code.woboq.org/userspace/glibc//sysdeps/unix/sysv/linux/aarch64/sys/user.h.html */
+    #ifndef HAVE_USER_REGS_STRUCT
+    struct user_regs_struct {
+	    unsigned long long regs[31];
+	    unsigned long long sp;
+	    unsigned long long pc;
+	    unsigned long long pstate;
+    };
+    #endif /* !HAVE_USER_REGS_STRUCT */
+
+    #ifndef HAVE_USER_FPSIMD_STRUCT
+    struct user_fpsimd_struct {
+	    __uint128_t vregs[32];
+	    unsigned int fpsr;
+	    unsigned int fpcr;
+    };
+    #endif /* !HAVE_USER_FPSIMD_STRUCT */
+
 #elif defined(ARCH_X86)
 
     #define SYSNUMS_HEADER1 "syscall/sysnums-i386.h"
diff --git a/src/execve/exit.c b/src/execve/exit.c
index 475e002..49452b9 100644
--- a/src/execve/exit.c
+++ b/src/execve/exit.c
@@ -420,6 +420,21 @@ void translate_execve_exit(Tracee *tracee)
 		poke_reg(tracee, STATE_FLAGS, 0);
 
 #if defined(ARCH_ARM_EABI) && defined(__thumb__)
+
+/* Fix a compile error of proot when edc869d -> 58d2161. */
+/* These defines come from /usr/arm-linux-gnueabihf/include/asm/ptrace.h */
+#ifndef ARM_cpsr
+#define ARM_cpsr        uregs[16]
+#endif /* ARM_cpsr */
+
+#ifndef V4_PSR_T_BIT
+#define V4_PSR_T_BIT    0x00000020      /* >= V4T, but not V7M */
+#endif /* V4_PSR_T_BIT */
+
+#ifndef PSR_T_BIT
+#define PSR_T_BIT       V4_PSR_T_BIT
+#endif /* PSR_T_BIT */
+
 		/* Leave ARM thumb mode */
 		tracee->_regs[CURRENT].ARM_cpsr &= ~PSR_T_BIT;
 #endif
